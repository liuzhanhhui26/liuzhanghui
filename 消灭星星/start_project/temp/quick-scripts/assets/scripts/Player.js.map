{"version":3,"sources":["Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","jumpAudio","default","url","AudioClip","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","callback","callFunc","playJumpSound","audioEngine","playEffect","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","accLeft","d","accRight","KEY_UP","onLoad","jumpAction","node","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":"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","file":"Player.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    \r\n    \r\n    // Player.js\r\n    //...\r\n    properties: {\r\n    // 主角跳跃高度\r\n    jumpHeight: 0,\r\n    // 主角跳跃持续时间\r\n    jumpDuration: 0,\r\n    // 最大移动速度\r\n    maxMoveSpeed: 0,\r\n    // 加速度\r\n    accel: 0,\r\n    // 跳跃音效资源\r\n    jumpAudio: {\r\n    default: null,\r\n    url: cc.AudioClip\r\n    },\r\n    },\r\n    //...\r\n    setJumpAction: function () {\r\n    // 跳跃上升\r\n    var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n    // 下落\r\n    var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n    // 不断重复\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown));\r\n    // 跳跃上升\r\n    var jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n    // 下落\r\n    var jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n    // 添加一个回调函数，用于在动作结束时调用我们定义的其他方法\r\n    var callback = cc.callFunc(this.playJumpSound, this);\r\n    // 不断重复，而且每次完成落地动作后调用回调来播放声音\r\n    return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n    \r\n    playJumpSound: function () {\r\n    // 调用声音引擎播放声音\r\n    cc.audioEngine.playEffect(this.jumpAudio, false);\r\n    },\r\n    // use this for initialization\r\n    setInputControl: function () {\r\n    var self = this;\r\n    // 添加键盘事件监听\r\n    // 有按键按下时，判断是否是我们指定的方向控制键，并设置向对应方向加速\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, function (event){\r\n    switch(event.keyCode) {\r\n    case cc.KEY.a:\r\n    self.accLeft = true;\r\n    break;\r\n    case cc.KEY.d:\r\n    self.accRight = true;\r\n    break;\r\n    }\r\n    });\r\n    \r\n    // 松开按键时，停止向该方向的加速\r\n    cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, function (event){\r\n    switch(event.keyCode) {\r\n    case cc.KEY.a:\r\n    self.accLeft = false;\r\n    break;\r\n    case cc.KEY.d:\r\n    self.accRight = false;\r\n    break;\r\n    }\r\n    });\r\n    },\r\n    onLoad: function () {// 初始化跳跃动作\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n        \r\n        // 加速度方向开关\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n        // 主角当前水平方向速度\r\n        this.xSpeed = 0;\r\n        \r\n        // 初始化键盘输入监听\r\n        this.setInputControl();\r\n        \r\n        },\r\n        update: function (dt) {\r\n        // 根据当前加速度方向每帧更新速度\r\n        if (this.accLeft) {\r\n        this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n        this.xSpeed += this.accel * dt;\r\n        }\r\n        // 限制主角的速度不能超过最大值\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n        // if speed reach limit, use max speed with current direction\r\n        this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n        \r\n        // 根据当前速度更新主角的位置\r\n        this.node.x += this.xSpeed * dt;\r\n        },\r\n        // called every frame, uncomment this function to activate update callback\r\n        // update: function (dt) {\r\n        \r\n        // },\r\n        });\r\n        "]}